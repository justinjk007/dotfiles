#!/bin/bash

# Notice how this is not copied by the copy script, you have to do
# this manually as this could just be a sample and is not often
# changed
# This is just current configurations backed up along with some misc lines, use what you need when setting up

# dart/flutter stuff
export PATH="$PATH:$HOME/Dev/flutter/bin/"
export PATH="$PATH":"$HOME/Dev/flutter/.pub-cache/bin"
export PATH="$PATH":"$HOME/Dev/flutter/bin/cache/dart-sdk/bin/"
export FLUTTER_ROOT="$HOME/Dev/flutter/bin/"

# perl stuff(This is automatically generated by cpan when cpan is configured for the first time, I'm just saving it for history)
PATH="/Users/Justin.Kaipada@ibm.com/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/Users/Justin.Kaipada@ibm.com/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/Users/Justin.Kaipada@ibm.com/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/Users/Justin.Kaipada@ibm.com/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/Justin.Kaipada@ibm.com/perl5"; export PERL_MM_OPT;

# python stuff
PATH="/Users/Justin.Kaipada@ibm.com/Library/Python/3.11/bin${PATH:+:${PATH}}"; export PATH;

# go stuff
export PATH="$PATH":"$HOME/go/bin":"/usr/local/go/bin/"
export GOPATH="$HOME/go"
export GOROOT="/usr/local/go"

# IBM specific config

# IBM VPN
export PATH="$PATH:/opt/cisco/anyconnect/bin/"

alias gitforcepull='git fetch --all && git reset --hard origin/main' # pull and overwrite any local changes

export PROMPT_COMMAND='printf "\033k\033\134"' # stop GNU Screen from changing the set title

# if on pok domain start hostnames with POK otherwise stick to TOR
HOSTNAME=`hostname`
FIRST_3_CHAR=`echo $HOSTNAME | cut -c1-3`
SECOND_3_CHAR=`echo $HOSTNAME | cut -c4-6`
DOMAIN_CHAR=`echo $HOSTNAME | cut -d . -f 2`
if [ "$FIRST_3_CHAR" == "TOR" ] && [ "$DOMAIN_CHAR" == "pok" ]; then
    NAME=`echo $HOSTNAME | cut -d . -f 1`
    SECOND_PART=`echo $NAME | cut -c4-8`
    NEW_HOSTNAME="POK$SECOND_PART"
elif [ "$SECOND_3_CHAR" == "CAN" ] && [ "$DOMAIN_CHAR" == "pok" ]; then
    NAME=`echo $HOSTNAME | cut -d . -f 1`
    LAST_PART=`echo $NAME | cut -c7-8`
    NEW_HOSTNAME="${FIRST_3_CHAR}POK${LAST_PART}"
else
    NEW_HOSTNAME=`echo $HOSTNAME | cut -d . -f 1`
fi
PS1='\n\[\e[01;33m\]\u\[\e[0m\]\[\e[00;37m\]@\[\e[0m\]\[\e[01;36m\]$NEW_HOSTNAME\[\e[0m\]\[\e[00;37m\] \t \[\e[0m\]\[\e[00;36m\]\w\[\e[0m\]\[\e[01;37m\] \[\e[0m\]\n$ '

export everyone='/gsa/rtpgsa/home/k/a/kaipada/everyone' # accessible on all machines
export run_temp='/gsa/rtpgsa/home/k/a/kaipada/temp_script' # For quick and dirty scripting on the go, accessible on all machines
alias run_temp='/gsa/rtpgsa/home/k/a/kaipada/temp_script'
alias ll='ls -al' # h option is not supported on AIX or Z/OS
alias untar='tar -xvf'
export TERM=xterm
export COLUMNS=1000
set -o vi
PS1='\n\[\e[01;33m\]\u\[\e[0m\]\[\e[00;37m\]@\[\e[0m\]\[\e[01;36m\]\h\[\e[0m\]\[\e[00;37m\] \t \[\e[0m\]\[\e[00;36m\]\w\[\e[0m\]\[\e[01;37m\] \[\e[0m\]\n$ '
export PATH="$PATH":"/gsa/pokgsa/projects/x/xlcmpbld/build/tools":"/build/tools"

export HISTCONTROL=ignoredups:erasedups # no duplicate entries
export HISTSIZE=100000 # big big history
export HISTFILESIZE=100000 # big big history
shopt -s histappend # append to history
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

function which () {
    for path in $(echo "$PATH" | sed -e 's/:/ /g'); do
	[ -x "$path/$1" ] && echo "$path/$1";
    done | uniq
}
